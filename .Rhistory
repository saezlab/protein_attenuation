source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite("limma")
source("https://bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
source("https://bioconductor.org/biocLite.R")
biocLite("edgeR")
load('~/Downloads/clinical.RData')
cc
write.table(cc, '~/Data/tcga_clinical_data.csv', quote = F)
load('~/Downloads/clinical.RData')
write.table(cc, '~/Data/tcga_clinical_data.tab', quote = F, sep = '\t')
cc
write.table(cc, '~/Data/tcga_clinical_data.tab', quote = F, sep = '\t', row.names = F)
cl <- load('~/Data/sanger/17_BAGEL-R_output/A2780_GeneLevelBF.rdata')
cl
cl <- load('~/Data/sanger/17_BAGEL-R_output/COLO-205_GeneLevelBF.rdata')
cl
head(cl)
data <- load('~/Data/sanger/17_BAGEL-R_output/COLO-205_GeneLevelBF.rdata')
<- load('~/Data/sanger/17_BAGEL-R_output/COLO-205_GeneLevelBF.rdata')
load('~/Data/sanger/17_BAGEL-R_output/COLO-205_GeneLevelBF.rdata')
load('~/Data/sanger/17_BAGEL-R_output/COLO-205_GeneLevelBF.rdata')
head(GeneLevelBFs)
GeneLevelBFs[,'Avg']
hist(GeneLevelBFs[,'Avg'])
load('~/Data/sanger/BagelDepMat.RData')
BagelDepMat
write.table(BagelDepMat, '~/Data/sanger/BagelDepMat.csv', quote = F)
write.table(BagelDepMat, '~/Data/sanger/BagelDepMat.csv', quote = F, sep = ',')
load('~/Data/sanger/KY_Library_v1.0.RData')
head(KY_Library_v1.0)
load('~/Data/sanger/17_BAGEL-R_output/A2780_sgRNAs_BFs.Rdata')
sgRNA_BFs_across_reps
sgRNA_BFs_across_reps$A2780_c905R1$sgRNA_BFs
sgRNA_BFs_across_reps$A2780_c905R1$sgRNA_BFs_inclTr
sgRNA_BFs_across_reps$A2780_c905R1$sgRNA_BFs
sgRNA_BFs_across_reps$A2780_c905R1$sgRNA_BFs[,'avg_bootstr_BFs']
load('~/Data/sanger/17_BAGEL-R_output/COLO-205_sgRNAs_BFs.Rdata')
sgRNA_BFs_across_reps$CO205_c903R1
sgRNA_BFs_across_reps$CO205_c903R1$boostPERF$th
length(sgRNA_BFs_across_reps$CO205_c903R1$sgRNA_BFs)
length(sgRNA_BFs_across_reps$CO205_c903R1$sgRNA_BFs_inclTr)
plot(sgRNA_BFs_across_reps$CO205_c903R1$sgRNA_BFs_inclTr, sgRNA_BFs_across_reps$CO205_c903R1$sgRNA_BFs)
names(sgRNA_BFs_across_reps)
r = 'CO205_c903R1'
sgRNA_BFs_across_reps[r]
names(sgRNA_BFs_across_reps[r])
sgRNA_BFs_across_reps[r]
sgRNA_BFs_across_reps[r]['sgRNA_BFs']
bfscores <- 'sgRNA_BFs'
BF_FIELD <- 'sgRNA_BFs'
sgRNA_BFs_across_reps[r][BF_FIELD]
typeof(sgRNA_BFs_across_reps)
sgRNA_BFs_across_reps
len(sgRNA_BFs_across_reps)
length(sgRNA_BFs_across_reps)
sgRNA_BFs_across_reps[0]
sgRNA_BFs_across_reps[,0]
sgRNA_BFs_across_reps[1]
get(r, sgRNA_BFs_across_reps)
get(BF_FIELD, get(r, sgRNA_BFs_across_reps))
get(BF_FIELD, get(r, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']
lapply(names(sgRNA_BFs_across_reps), function (r) {get(BF_FIELD, get(r, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']})
lapply(names(sgRNA_BFs_across_reps), function (r) {get(BF_FIELD, get(r, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']})
names(sgRNA_BFs_across_reps)
lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']})
cbind(lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']
get(BF_FIELD, get(r, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']
typeof(get(BF_FIELD, get(r, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs'])
unlist(get(BF_FIELD, get(r, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs'])
rbind(lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']})
lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']})
c(lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
data.frame(lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
sc
sc <- data.frame(lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
sgRNA_BFs_across_reps$CO205_c903R1$sgRNA_BFs
dim(sgRNA_BFs_across_reps$CO205_c903R1$sgRNA_BFs)
dim(sgRNA_BFs_across_reps$CO205_c903R2$sgRNA_BFs)
dim(sgRNA_BFs_across_reps$CO205_c903R3$sgRNA_BFs)
load('~/Data/sanger/08_MageckOutput/SW1990_sgRNAs_BFs.Rdata')
load('~/Data/sanger/17_BAGEL-R_output/SW1990_sgRNAs_BFs.Rdata')
dim(sgRNA_BFs_across_reps$SW1990_c904R1$sgRNA_BFs)
sc
names(sgRNA_BFs_across_reps)
load('~/Data/sanger/KY_Library_v1.0.RData')
BF_FIELD <- 'sgRNA_BFs'
load('~/Data/sanger/17_BAGEL-R_output/SW1990_sgRNAs_BFs.Rdata')
data.frame(lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
sc <- data.frame(lapply(names(sgRNA_BFs_across_reps), function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
dim(sc)
?data.frame
replicates
replicates <- names(sgRNA_BFs_across_reps)
replicates
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}), colnames=replicates)
replicates
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
dim(sc)
colnames(sc)
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
sc
print(len(replicates))
print(length(replicates))
bf_scores <- data.frame(
load('~/Data/sanger/17_BAGEL-R_output/SW1990_sgRNAs_BFs.Rdata')
replicates <- names(sgRNA_BFs_across_reps)
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
print(length(replicates))
bf_scores <- data.frame()
bf_scores
cbind(bf_scores, sc)
read.csv('~/Data/sanger/17_BAGEL-R_output/bagel_sgrna_filelist.csv')
read.csv('~/Data/sanger/17_BAGEL-R_output/bagel_sgrna_filelist.csv')
bagel_sgrna_files <- read.csv('~/Data/sanger/17_BAGEL-R_output/bagel_sgrna_filelist.csv')
f = 'TOV-21G_sgRNAs_BFs.Rdata'
paste(c('~/Data/sanger/17_BAGEL-R_output/', f), sep='')
?paste
paste('~/Data/sanger/17_BAGEL-R_output/', f, sep='')
f = 'TOV-21G_sgRNAs_BFs.Rdata'
load('~/Data/sanger/KY_Library_v1.0.RData')
BF_FIELD <- 'sgRNA_BFs'
bagel_sgrna_files <- read.csv('~/Data/sanger/17_BAGEL-R_output/bagel_sgrna_filelist.csv')
paste('~/Data/sanger/17_BAGEL-R_output/', f, sep='')
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
replicates <- names(sgRNA_BFs_across_reps)
f
print(paste(f, length(replicates)))
print(paste(f, ': ', length(replicates)))
print(paste(f, ':', length(replicates)))
bagel_sgrna_files
bagel_sgrna_files[:2]
unlist(bagel_sgrna_files[])
unlist(bagel_sgrna_files)
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/bagel_sgrna_filelist.csv'))
bagel_sgrna_files
bagel_sgrna_files[:3]
head(bagel_sgrna_files)
head(bagel_sgrna_files)
lapply(head(bagel_sgrna_files), function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
return(sc)
})
?head
head(bagel_sgrna_files, n=3)
bf_scores <- rbind(lapply(head(bagel_sgrna_files, n=3), function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
return(sc)
}))
bf_scores
sc
bf_scores <- lapply(head(bagel_sgrna_files, n=3), function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
return(sc)
})
bf_scores
dim(bf_scores)
merge(bf_scores)
data.frame(bf_scores)
# -- Import and merge BAGEL scores at sgRNA level with replicates
# Define field containing BAGEL scores
BF_FIELD <- 'sgRNA_BFs'
# List of BAGEL files with replicates
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/bagel_sgrna_filelist.csv'))
bagel_sgrna_files
f <- 'CAL-85-1_sgRNAs_BFs.Rdata'
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
sc
f
strsplit(f, '.')
strsplit(f, '\\.')
strsplit(f, '\\.')[1]
strsplit(f, '\\.')[[1]
strsplit(f, '\\.')[[1]]
strsplit(f, '\\.')[[[1]]
strsplit(f, '\\.')[[[1]]]
strsplit(f, '\\.')[[1]]
strsplit(f, '\\.')[[1]][1]
paste('~/Data/sanger/17_BAGEL-R_output/', strsplit(f, '\\.')[[1]][1], sep='')
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', strsplit(f, '\\.')[[1]][1], '.csv', sep=''), quote = F)
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', strsplit(f, '\\.')[[1]][1], '.csv', sep=''), quote = F, sep=',')
# -- Import and merge BAGEL scores at sgRNA level with replicates
# Define field containing BAGEL scores
BF_FIELD <- 'sgRNA_BFs'
# List of BAGEL files with replicates
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/_bagel_sgrna_filelist.csv'))
# Iterate over all BAGEL files and extract each replicate
lapply(bagel_sgrna_files, function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
# Export as table
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', strsplit(f, '\\.')[[1]][1], '.csv', sep=''), quote = F, sep=',')
})
f = 'A375_sgRNAs_BFs.Rdata'
f
strsplit(f, '\\.')[[1]][1]
paste(f, ':', length(replicates))
str(f)
# -- Import and merge BAGEL scores at sgRNA level with replicates
# Define field containing BAGEL scores
BF_FIELD <- 'sgRNA_BFs'
# List of BAGEL files with replicates
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/_bagel_sgrna_filelist.csv'))
# Iterate over all BAGEL files and extract each replicate
lapply(bagel_sgrna_files, function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
# Export as table
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', strsplit(str(f), '\\.')[[1]][1], '.csv', sep=''), quote = F, sep=',')
})
# --
# load('~/Data/sanger/KY_Library_v1.0.RData')
as.character(f)
# -- Import and merge BAGEL scores at sgRNA level with replicates
# Define field containing BAGEL scores
BF_FIELD <- 'sgRNA_BFs'
# List of BAGEL files with replicates
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/_bagel_sgrna_filelist.csv'))
# Iterate over all BAGEL files and extract each replicate
lapply(bagel_sgrna_files, function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
# Export as table
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', strsplit(as.character(f), '\\.')[[1]][1], '.csv', sep=''), quote = F, sep=',')
})
# --
# load('~/Data/sanger/KY_Library_v1.0.RData')
6+2+3+3+3+3+2+3+3+2+3+3+3+3+3+3+2+3+3+3+3+3+3+3+3+3+3+3+2+2+3+2+3+3+3+6+3+3+2+18+2+3+3+1+3+3+3+3+3+3+3+3+3+3+3+3+1+3+3+3+3+3+3+1+1+3+5+3+3+3+3+3+2+1+3+2+3+3+3+2+3+3+3+3+2+3+3+3+3+2+3+3+3+2+3+3+3+3+3+3+3+5+3+3+2+1+2+3+2+3+3+3+3+3+3
load('~/Data/sanger/KY_Library_v1.0.RData')
KY_Library_v1.0
dim(KY_Library_v1.0)
write.table(KY_Library_v1.0, '~/Data/sanger/KY_Library_v1.0.csv', sep=',')
write.table(KY_Library_v1.0, '~/Data/sanger/KY_Library_v1.0.csv', sep=',', quote = F)
# -- Import and merge BAGEL scores at sgRNA level with replicates
# Define field containing BAGEL scores
BF_FIELD <- 'sgRNA_BFs'
# List of BAGEL files with replicates
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/_bagel_sgrna_filelist.csv'))
f <- 'UWB1.289_sgRNAs_BFs.Rdata'
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
f
f
tools::file_path_sans_ext(f)
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
# Export as table
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', tools::file_path_sans_ext(f), '.csv', sep=''), quote = F, sep=',')
replicates
f = 'OAW-42'
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
replicates
f
f = 'OAW-42_sgRNAs_BFs.Rdata'
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- replicates
replicates
f
strsplit(f, '_')[1]
strsplit(f, '_')[[1]]
strsplit(f, '_')[[1]][1]
replicates
lapply(range(length(replicates)))
lapply(?range(length(replicates)))
length(replicates)
1:length(replicates)
lapply(1:length(replicates), paste(strsplit(f, '_')[[1]][1], x, sep='_'))
lapply(1:length(replicates), function(x) {paste(strsplit(f, '_')[[1]][1], x, sep='_')})
unlist(lapply(1:length(replicates), function(x) {paste(strsplit(f, '_')[[1]][1], x, sep='_')}))
# -- Import and merge BAGEL scores at sgRNA level with replicates
# Define field containing BAGEL scores
BF_FIELD <- 'sgRNA_BFs'
# List of BAGEL files with replicates
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/_bagel_sgrna_filelist.csv'))
# Iterate over all BAGEL files and extract each replicate
lapply(bagel_sgrna_files, function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- unlist(lapply(1:length(replicates), function(x) {paste(strsplit(f, '_')[[1]][1], x, sep='_')}))
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
# Export as table
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', tools::file_path_sans_ext(f), '.csv', sep=''), quote = F, sep=',')
})
# -- Import sgRNA mapping and export
load('~/Data/sanger/KY_Library_v1.0.RData')
write.table(KY_Library_v1.0, '~/Data/sanger/KY_Library_v1.0.csv', sep=',', quote = F)
# -- Import and merge BAGEL scores at sgRNA level with replicates
# Define field containing BAGEL scores
BF_FIELD <- 'sgRNA_BFs'
# List of BAGEL files with replicates
bagel_sgrna_files <- unlist(read.csv('~/Data/sanger/17_BAGEL-R_output/_bagel_sgrna_filelist.csv'))
# Iterate over all BAGEL files and extract each replicate
lapply(bagel_sgrna_files, function (f) {
# Load BAGEL file
load(paste('~/Data/sanger/17_BAGEL-R_output/', f, sep=''))
# List all replicates
replicates <- names(sgRNA_BFs_across_reps)
# Extract from each replicate the BAGEL scores (stored in avg_bootstr_BFs) at sgRNA level
sc <- data.frame(lapply(replicates, function (x) {get(BF_FIELD, get(x, sgRNA_BFs_across_reps))[ ,'avg_bootstr_BFs']}))
colnames(sc) <- unlist(lapply(1:length(replicates), function(x) {paste(strsplit(as.character(f), '_')[[1]][1], x, sep='_')}))
# Print total number of replicates (debug purposes)
print(paste(f, ':', length(replicates)))
# Export as table
write.table(sc, paste('~/Data/sanger/17_BAGEL-R_output/', tools::file_path_sans_ext(f), '.csv', sep=''), quote = F, sep=',')
})
# -- Import sgRNA mapping and export
load('~/Data/sanger/KY_Library_v1.0.RData')
write.table(KY_Library_v1.0, '~/Data/sanger/KY_Library_v1.0.csv', sep=',', quote = F)
library(limma)
# -- Set dir
setwd('~/Projects/protein_attenuation/')
# -- Import transcriptomics
trans <- read.table('./data/tcga_rnaseq_corrected_normalised.csv', sep=',', header=T, row.names=1, check.names=F)
# -- Import samplesheet
sampesheet <- read.table('./tables/sample_attenuation_table.csv', sep=',', header=T, row.names=1)
att_samples <- row.names(sampesheet[sampesheet['attenuation_potential'] == 'High', ])
# -- Linear gene expression
# Design matrix
f <- factor((colnames(trans) %in% att_samples) + 0)
names(f) <- colnames(trans)
design <- model.matrix(~f)
colnames(design) <- c('Intercept', 'Attenuation')
# Linear fit
fit <- lmFit(trans, design)
# Bayes fit
fit2 <- eBayes(fit)
# Output
output <- topTable(fit2, adjust.method='fdr', n=Inf, coef='Attenuation')
output[output['adj.P.Val'] < 0.05, ]
att_samples
trans['NUDT6', att_samples]
mean(trans['NUDT6', att_samples])
trans['NUDT6', att_samples]
boxplot(trans['NUDT6', att_samples])
boxplot(unlist(trans['NUDT6', att_samples]))
mean(unlist(trans['NUDT6', att_samples]))
library(limma)
# -- Set dir
setwd('~/Projects/protein_attenuation/')
# -- Import transcriptomics
trans <- read.table('./data/tcga_rnaseq_corrected_normalised.csv', sep=',', header=T, row.names=1, check.names=F)
# -- Import samplesheet
sampesheet <- read.table('./tables/sample_attenuation_table.csv', sep=',', header=T, row.names=1)
att_samples <- row.names(sampesheet[sampesheet['attenuation_potential'] == 'High', ])
# -- Linear gene expression
# Design matrix
f <- factor((colnames(trans) %in% att_samples) + 0)
names(f) <- colnames(trans)
design <- model.matrix(~f)
colnames(design) <- c('Intercept', 'Attenuation')
# Linear fit
fit <- lmFit(trans, design)
# Bayes fit
fit2 <- eBayes(fit)
# Output
output <- topTable(fit2, adjust.method='fdr', n=Inf, coef='Attenuation')
output[output['adj.P.Val'] < 0.05, ]
output
write.table(output, './tables/attenuation_gene_signature_de.csv', sep=',', quote=F)
output[output['adj.P.Val'] < 0.05, ]
dim(output[output['adj.P.Val'] < 0.05, ])
